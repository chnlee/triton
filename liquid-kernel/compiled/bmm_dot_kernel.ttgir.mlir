#blocked = #ttg.blocked<{sizePerThread = [1, 2, 2], threadsPerWarp = [1, 4, 8], warpsPerCTA = [2, 2, 1], order = [2, 1, 0]}>
#blocked1 = #ttg.blocked<{sizePerThread = [1, 1, 4], threadsPerWarp = [2, 4, 4], warpsPerCTA = [1, 4, 1], order = [2, 0, 1]}>
#loc = loc("/home/chan/triton/python/test_corelab/test_3D_conv.py":13:0)
#shared = #ttg.shared<{vec = 1, perPhase = 1, maxPhase = 1, order = [2, 1, 0], hasLeadingOffset = false}>
#smem = #ttg.shared_memory
module attributes {"ttg.num-ctas" = 1 : i32, "ttg.num-warps" = 4 : i32, ttg.target = "cuda:75", "ttg.threads-per-warp" = 32 : i32} {
  tt.func public @bmm_dot_kernel(%arg0: i32 {tt.divisibility = 16 : i32} loc("/home/chan/triton/python/test_corelab/test_3D_conv.py":13:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("/home/chan/triton/python/test_corelab/test_3D_conv.py":13:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("/home/chan/triton/python/test_corelab/test_3D_conv.py":13:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("/home/chan/triton/python/test_corelab/test_3D_conv.py":13:0), %arg4: i32 {tt.divisibility = 16 : i32} loc("/home/chan/triton/python/test_corelab/test_3D_conv.py":13:0), %arg5: i32 {tt.divisibility = 16 : i32} loc("/home/chan/triton/python/test_corelab/test_3D_conv.py":13:0), %arg6: i32 {tt.divisibility = 16 : i32} loc("/home/chan/triton/python/test_corelab/test_3D_conv.py":13:0), %arg7: i32 {tt.divisibility = 16 : i32} loc("/home/chan/triton/python/test_corelab/test_3D_conv.py":13:0), %arg8: i32 {tt.divisibility = 16 : i32} loc("/home/chan/triton/python/test_corelab/test_3D_conv.py":13:0), %arg9: i32 {tt.divisibility = 16 : i32} loc("/home/chan/triton/python/test_corelab/test_3D_conv.py":13:0)) attributes {noinline = false} {
    %cst = arith.constant dense<0.000000e+00> : tensor<2x16x16xf32, #blocked> loc(#loc1)
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %c16_i32 = arith.constant 16 : i32 loc(#loc1)
    %c2_i32 = arith.constant 2 : i32 loc(#loc1)
    %cst_0 = arith.constant dense<16> : tensor<2x16x16xi32, #blocked1> loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = tt.get_program_id y : i32 loc(#loc3)
    %2 = tt.get_program_id z : i32 loc(#loc4)
    %3 = arith.muli %0, %c16_i32 : i32 loc(#loc5)
    %4 = tt.make_range {end = 16 : i32, start = 0 : i32} : tensor<16xi32, #ttg.slice<{dim = 1, parent = #ttg.slice<{dim = 0, parent = #blocked1}>}>> loc(#loc6)
    %5 = tt.make_range {end = 16 : i32, start = 0 : i32} : tensor<16xi32, #ttg.slice<{dim = 0, parent = #ttg.slice<{dim = 0, parent = #blocked1}>}>> loc(#loc6)
    %6 = tt.splat %3 : i32 -> tensor<16xi32, #ttg.slice<{dim = 1, parent = #ttg.slice<{dim = 0, parent = #blocked1}>}>> loc(#loc7)
    %7 = arith.addi %6, %4 : tensor<16xi32, #ttg.slice<{dim = 1, parent = #ttg.slice<{dim = 0, parent = #blocked1}>}>> loc(#loc7)
    %8 = arith.muli %1, %c16_i32 : i32 loc(#loc8)
    %9 = tt.splat %8 : i32 -> tensor<16xi32, #ttg.slice<{dim = 0, parent = #ttg.slice<{dim = 0, parent = #blocked1}>}>> loc(#loc9)
    %10 = arith.addi %9, %5 : tensor<16xi32, #ttg.slice<{dim = 0, parent = #ttg.slice<{dim = 0, parent = #blocked1}>}>> loc(#loc9)
    %11 = arith.muli %2, %c2_i32 : i32 loc(#loc10)
    %12 = tt.make_range {end = 2 : i32, start = 0 : i32} : tensor<2xi32, #ttg.slice<{dim = 1, parent = #ttg.slice<{dim = 1, parent = #blocked1}>}>> loc(#loc11)
    %13 = tt.splat %11 : i32 -> tensor<2xi32, #ttg.slice<{dim = 1, parent = #ttg.slice<{dim = 1, parent = #blocked1}>}>> loc(#loc12)
    %14 = arith.addi %13, %12 : tensor<2xi32, #ttg.slice<{dim = 1, parent = #ttg.slice<{dim = 1, parent = #blocked1}>}>> loc(#loc12)
    %15 = tt.expand_dims %14 {axis = 1 : i32} : tensor<2xi32, #ttg.slice<{dim = 1, parent = #ttg.slice<{dim = 1, parent = #blocked1}>}>> -> tensor<2x1xi32, #ttg.slice<{dim = 1, parent = #blocked1}>> loc(#loc13)
    %16 = tt.expand_dims %15 {axis = 1 : i32} : tensor<2x1xi32, #ttg.slice<{dim = 1, parent = #blocked1}>> -> tensor<2x1x1xi32, #blocked1> loc(#loc14)
    %17 = tt.splat %arg4 : i32 -> tensor<2x1x1xi32, #blocked1> loc(#loc15)
    %18 = arith.muli %16, %17 : tensor<2x1x1xi32, #blocked1> loc(#loc15)
    %19 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<2x1x1x!tt.ptr<f32>, #blocked1> loc(#loc16)
    %20 = tt.addptr %19, %18 : tensor<2x1x1x!tt.ptr<f32>, #blocked1>, tensor<2x1x1xi32, #blocked1> loc(#loc16)
    %21 = tt.expand_dims %7 {axis = 1 : i32} : tensor<16xi32, #ttg.slice<{dim = 1, parent = #ttg.slice<{dim = 0, parent = #blocked1}>}>> -> tensor<16x1xi32, #ttg.slice<{dim = 0, parent = #blocked1}>> loc(#loc17)
    %22 = tt.splat %arg5 : i32 -> tensor<16x1xi32, #ttg.slice<{dim = 0, parent = #blocked1}>> loc(#loc18)
    %23 = arith.muli %21, %22 : tensor<16x1xi32, #ttg.slice<{dim = 0, parent = #blocked1}>> loc(#loc18)
    %24 = tt.expand_dims %23 {axis = 0 : i32} : tensor<16x1xi32, #ttg.slice<{dim = 0, parent = #blocked1}>> -> tensor<1x16x1xi32, #blocked1> loc(#loc19)
    %25 = tt.broadcast %20 : tensor<2x1x1x!tt.ptr<f32>, #blocked1> -> tensor<2x16x1x!tt.ptr<f32>, #blocked1> loc(#loc19)
    %26 = tt.broadcast %24 : tensor<1x16x1xi32, #blocked1> -> tensor<2x16x1xi32, #blocked1> loc(#loc19)
    %27 = tt.addptr %25, %26 : tensor<2x16x1x!tt.ptr<f32>, #blocked1>, tensor<2x16x1xi32, #blocked1> loc(#loc19)
    %28 = tt.expand_dims %5 {axis = 0 : i32} : tensor<16xi32, #ttg.slice<{dim = 0, parent = #ttg.slice<{dim = 0, parent = #blocked1}>}>> -> tensor<1x16xi32, #ttg.slice<{dim = 0, parent = #blocked1}>> loc(#loc20)
    %29 = tt.expand_dims %28 {axis = 0 : i32} : tensor<1x16xi32, #ttg.slice<{dim = 0, parent = #blocked1}>> -> tensor<1x1x16xi32, #blocked1> loc(#loc21)
    %30 = tt.broadcast %27 : tensor<2x16x1x!tt.ptr<f32>, #blocked1> -> tensor<2x16x16x!tt.ptr<f32>, #blocked1> loc(#loc21)
    %31 = tt.broadcast %29 : tensor<1x1x16xi32, #blocked1> -> tensor<2x16x16xi32, #blocked1> loc(#loc21)
    %32 = tt.addptr %30, %31 : tensor<2x16x16x!tt.ptr<f32>, #blocked1>, tensor<2x16x16xi32, #blocked1> loc(#loc21)
    %33 = tt.splat %arg6 : i32 -> tensor<2x1x1xi32, #blocked1> loc(#loc22)
    %34 = arith.muli %16, %33 : tensor<2x1x1xi32, #blocked1> loc(#loc22)
    %35 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<2x1x1x!tt.ptr<f32>, #blocked1> loc(#loc23)
    %36 = tt.addptr %35, %34 : tensor<2x1x1x!tt.ptr<f32>, #blocked1>, tensor<2x1x1xi32, #blocked1> loc(#loc23)
    %37 = tt.expand_dims %4 {axis = 1 : i32} : tensor<16xi32, #ttg.slice<{dim = 1, parent = #ttg.slice<{dim = 0, parent = #blocked1}>}>> -> tensor<16x1xi32, #ttg.slice<{dim = 0, parent = #blocked1}>> loc(#loc24)
    %38 = tt.splat %arg7 : i32 -> tensor<16x1xi32, #ttg.slice<{dim = 0, parent = #blocked1}>> loc(#loc25)
    %39 = arith.muli %37, %38 : tensor<16x1xi32, #ttg.slice<{dim = 0, parent = #blocked1}>> loc(#loc25)
    %40 = tt.expand_dims %39 {axis = 0 : i32} : tensor<16x1xi32, #ttg.slice<{dim = 0, parent = #blocked1}>> -> tensor<1x16x1xi32, #blocked1> loc(#loc26)
    %41 = tt.broadcast %36 : tensor<2x1x1x!tt.ptr<f32>, #blocked1> -> tensor<2x16x1x!tt.ptr<f32>, #blocked1> loc(#loc26)
    %42 = tt.broadcast %40 : tensor<1x16x1xi32, #blocked1> -> tensor<2x16x1xi32, #blocked1> loc(#loc26)
    %43 = tt.addptr %41, %42 : tensor<2x16x1x!tt.ptr<f32>, #blocked1>, tensor<2x16x1xi32, #blocked1> loc(#loc26)
    %44 = tt.expand_dims %10 {axis = 0 : i32} : tensor<16xi32, #ttg.slice<{dim = 0, parent = #ttg.slice<{dim = 0, parent = #blocked1}>}>> -> tensor<1x16xi32, #ttg.slice<{dim = 0, parent = #blocked1}>> loc(#loc27)
    %45 = tt.expand_dims %44 {axis = 0 : i32} : tensor<1x16xi32, #ttg.slice<{dim = 0, parent = #blocked1}>> -> tensor<1x1x16xi32, #blocked1> loc(#loc28)
    %46 = tt.broadcast %43 : tensor<2x16x1x!tt.ptr<f32>, #blocked1> -> tensor<2x16x16x!tt.ptr<f32>, #blocked1> loc(#loc28)
    %47 = tt.broadcast %45 : tensor<1x1x16xi32, #blocked1> -> tensor<2x16x16xi32, #blocked1> loc(#loc28)
    %48 = tt.addptr %46, %47 : tensor<2x16x16x!tt.ptr<f32>, #blocked1>, tensor<2x16x16xi32, #blocked1> loc(#loc28)
    %49 = arith.muli %arg7, %c16_i32 : i32 loc(#loc29)
    %50 = tt.splat %49 : i32 -> tensor<2x16x16xi32, #blocked1> loc(#loc30)
    %51:3 = scf.for %arg10 = %c0_i32 to %arg0 step %c16_i32 iter_args(%arg11 = %cst, %arg12 = %32, %arg13 = %48) -> (tensor<2x16x16xf32, #blocked>, tensor<2x16x16x!tt.ptr<f32>, #blocked1>, tensor<2x16x16x!tt.ptr<f32>, #blocked1>)  : i32 {
      %65 = tt.load %arg12 : tensor<2x16x16x!tt.ptr<f32>, #blocked1> loc(#loc32)
      %66 = ttg.local_alloc %65 : (tensor<2x16x16xf32, #blocked1>) -> !ttg.memdesc<2x16x16xf32, #shared, #smem> loc(#loc32)
      %67 = tt.load %arg13 : tensor<2x16x16x!tt.ptr<f32>, #blocked1> loc(#loc33)
      %68 = ttg.local_alloc %67 : (tensor<2x16x16xf32, #blocked1>) -> !ttg.memdesc<2x16x16xf32, #shared, #smem> loc(#loc33)
      %69 = ttg.local_load %66 : !ttg.memdesc<2x16x16xf32, #shared, #smem> -> tensor<2x16x16xf32, #ttg.dot_op<{opIdx = 0, parent = #blocked}>> loc(#loc32)
      %70 = ttg.local_load %68 : !ttg.memdesc<2x16x16xf32, #shared, #smem> -> tensor<2x16x16xf32, #ttg.dot_op<{opIdx = 1, parent = #blocked}>> loc(#loc33)
      %71 = tt.dot %69, %70, %arg11, inputPrecision = tf32 : tensor<2x16x16xf32, #ttg.dot_op<{opIdx = 0, parent = #blocked}>> * tensor<2x16x16xf32, #ttg.dot_op<{opIdx = 1, parent = #blocked}>> -> tensor<2x16x16xf32, #blocked> loc(#loc34)
      %72 = tt.addptr %arg12, %cst_0 : tensor<2x16x16x!tt.ptr<f32>, #blocked1>, tensor<2x16x16xi32, #blocked1> loc(#loc35)
      %73 = tt.addptr %arg13, %50 : tensor<2x16x16x!tt.ptr<f32>, #blocked1>, tensor<2x16x16xi32, #blocked1> loc(#loc30)
      scf.yield %71, %72, %73 : tensor<2x16x16xf32, #blocked>, tensor<2x16x16x!tt.ptr<f32>, #blocked1>, tensor<2x16x16x!tt.ptr<f32>, #blocked1> loc(#loc36)
    } loc(#loc31)
    %52 = tt.splat %arg8 : i32 -> tensor<2x1x1xi32, #blocked1> loc(#loc37)
    %53 = arith.muli %16, %52 : tensor<2x1x1xi32, #blocked1> loc(#loc37)
    %54 = tt.splat %arg3 : !tt.ptr<f32> -> tensor<2x1x1x!tt.ptr<f32>, #blocked1> loc(#loc38)
    %55 = tt.addptr %54, %53 : tensor<2x1x1x!tt.ptr<f32>, #blocked1>, tensor<2x1x1xi32, #blocked1> loc(#loc38)
    %56 = tt.splat %arg9 : i32 -> tensor<16x1xi32, #ttg.slice<{dim = 0, parent = #blocked1}>> loc(#loc39)
    %57 = arith.muli %21, %56 : tensor<16x1xi32, #ttg.slice<{dim = 0, parent = #blocked1}>> loc(#loc39)
    %58 = tt.expand_dims %57 {axis = 0 : i32} : tensor<16x1xi32, #ttg.slice<{dim = 0, parent = #blocked1}>> -> tensor<1x16x1xi32, #blocked1> loc(#loc40)
    %59 = tt.broadcast %55 : tensor<2x1x1x!tt.ptr<f32>, #blocked1> -> tensor<2x16x1x!tt.ptr<f32>, #blocked1> loc(#loc40)
    %60 = tt.broadcast %58 : tensor<1x16x1xi32, #blocked1> -> tensor<2x16x1xi32, #blocked1> loc(#loc40)
    %61 = tt.addptr %59, %60 : tensor<2x16x1x!tt.ptr<f32>, #blocked1>, tensor<2x16x1xi32, #blocked1> loc(#loc40)
    %62 = tt.broadcast %61 : tensor<2x16x1x!tt.ptr<f32>, #blocked1> -> tensor<2x16x16x!tt.ptr<f32>, #blocked1> loc(#loc41)
    %63 = tt.addptr %62, %47 : tensor<2x16x16x!tt.ptr<f32>, #blocked1>, tensor<2x16x16xi32, #blocked1> loc(#loc41)
    %64 = ttg.convert_layout %51#0 : tensor<2x16x16xf32, #blocked> -> tensor<2x16x16xf32, #blocked1> loc(#loc42)
    tt.store %63, %64 : tensor<2x16x16x!tt.ptr<f32>, #blocked1> loc(#loc42)
    tt.return loc(#loc43)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("/home/chan/triton/python/test_corelab/test_3D_conv.py":22:44)
#loc3 = loc("/home/chan/triton/python/test_corelab/test_3D_conv.py":22:62)
#loc4 = loc("/home/chan/triton/python/test_corelab/test_3D_conv.py":22:80)
#loc5 = loc("/home/chan/triton/python/test_corelab/test_3D_conv.py":24:28)
#loc6 = loc("/home/chan/triton/python/test_corelab/test_3D_conv.py":24:54)
#loc7 = loc("/home/chan/triton/python/test_corelab/test_3D_conv.py":24:41)
#loc8 = loc("/home/chan/triton/python/test_corelab/test_3D_conv.py":25:28)
#loc9 = loc("/home/chan/triton/python/test_corelab/test_3D_conv.py":25:41)
#loc10 = loc("/home/chan/triton/python/test_corelab/test_3D_conv.py":28:32)
#loc11 = loc("/home/chan/triton/python/test_corelab/test_3D_conv.py":28:64)
#loc12 = loc("/home/chan/triton/python/test_corelab/test_3D_conv.py":28:51)
#loc13 = loc("/home/chan/triton/python/test_corelab/test_3D_conv.py":29:63)
#loc14 = loc("/home/chan/triton/python/test_corelab/test_3D_conv.py":29:67)
#loc15 = loc("/home/chan/triton/python/test_corelab/test_3D_conv.py":31:38)
#loc16 = loc("/home/chan/triton/python/test_corelab/test_3D_conv.py":31:25)
#loc17 = loc("/home/chan/triton/python/test_corelab/test_3D_conv.py":31:73)
#loc18 = loc("/home/chan/triton/python/test_corelab/test_3D_conv.py":31:76)
#loc19 = loc("/home/chan/triton/python/test_corelab/test_3D_conv.py":31:50)
#loc20 = loc("/home/chan/triton/python/test_corelab/test_3D_conv.py":31:111)
#loc21 = loc("/home/chan/triton/python/test_corelab/test_3D_conv.py":31:88)
#loc22 = loc("/home/chan/triton/python/test_corelab/test_3D_conv.py":32:38)
#loc23 = loc("/home/chan/triton/python/test_corelab/test_3D_conv.py":32:25)
#loc24 = loc("/home/chan/triton/python/test_corelab/test_3D_conv.py":32:73)
#loc25 = loc("/home/chan/triton/python/test_corelab/test_3D_conv.py":32:76)
#loc26 = loc("/home/chan/triton/python/test_corelab/test_3D_conv.py":32:50)
#loc27 = loc("/home/chan/triton/python/test_corelab/test_3D_conv.py":32:111)
#loc28 = loc("/home/chan/triton/python/test_corelab/test_3D_conv.py":32:88)
#loc29 = loc("/home/chan/triton/python/test_corelab/test_3D_conv.py":41:35)
#loc30 = loc("/home/chan/triton/python/test_corelab/test_3D_conv.py":41:22)
#loc31 = loc("/home/chan/triton/python/test_corelab/test_3D_conv.py":35:30)
#loc32 = loc("/home/chan/triton/python/test_corelab/test_3D_conv.py":36:20)
#loc33 = loc("/home/chan/triton/python/test_corelab/test_3D_conv.py":37:20)
#loc34 = loc("/home/chan/triton/python/test_corelab/test_3D_conv.py":38:27)
#loc35 = loc("/home/chan/triton/python/test_corelab/test_3D_conv.py":40:22)
#loc36 = loc("/home/chan/triton/python/test_corelab/test_3D_conv.py":41:8)
#loc37 = loc("/home/chan/triton/python/test_corelab/test_3D_conv.py":43:29)
#loc38 = loc("/home/chan/triton/python/test_corelab/test_3D_conv.py":43:16)
#loc39 = loc("/home/chan/triton/python/test_corelab/test_3D_conv.py":43:67)
#loc40 = loc("/home/chan/triton/python/test_corelab/test_3D_conv.py":43:41)
#loc41 = loc("/home/chan/triton/python/test_corelab/test_3D_conv.py":43:79)
#loc42 = loc("/home/chan/triton/python/test_corelab/test_3D_conv.py":45:16)
#loc43 = loc("/home/chan/triton/python/test_corelab/test_3D_conv.py":45:4)
