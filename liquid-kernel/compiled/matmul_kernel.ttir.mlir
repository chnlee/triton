#loc = loc("/home/chan/triton/python/tutorials/03-matrix-multiplication.py":247:0)
module {
  tt.func public @matmul_kernel(%arg0: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("/home/chan/triton/python/tutorials/03-matrix-multiplication.py":247:0), %arg1: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("/home/chan/triton/python/tutorials/03-matrix-multiplication.py":247:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("/home/chan/triton/python/tutorials/03-matrix-multiplication.py":247:0), %arg3: i32 {tt.divisibility = 16 : i32} loc("/home/chan/triton/python/tutorials/03-matrix-multiplication.py":247:0), %arg4: i32 {tt.divisibility = 16 : i32} loc("/home/chan/triton/python/tutorials/03-matrix-multiplication.py":247:0), %arg5: i32 {tt.divisibility = 16 : i32} loc("/home/chan/triton/python/tutorials/03-matrix-multiplication.py":247:0), %arg6: i32 {tt.divisibility = 16 : i32} loc("/home/chan/triton/python/tutorials/03-matrix-multiplication.py":247:0), %arg7: i32 {tt.divisibility = 16 : i32} loc("/home/chan/triton/python/tutorials/03-matrix-multiplication.py":247:0), %arg8: i32 {tt.divisibility = 16 : i32} loc("/home/chan/triton/python/tutorials/03-matrix-multiplication.py":247:0)) attributes {noinline = false} {
    %c31_i32 = arith.constant 31 : i32 loc(#loc1)
    %cst = arith.constant dense<0.000000e+00> : tensor<128x64xf32> loc(#loc1)
    %c63_i32 = arith.constant 63 : i32 loc(#loc1)
    %c127_i32 = arith.constant 127 : i32 loc(#loc1)
    %c1_i32 = arith.constant 1 : i32 loc(#loc1)
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %cst_0 = arith.constant dense<32> : tensor<128x32xi32> loc(#loc1)
    %cst_1 = arith.constant dense<0.000000e+00> : tensor<32x64xf32> loc(#loc1)
    %cst_2 = arith.constant dense<0.000000e+00> : tensor<128x32xf32> loc(#loc1)
    %c32_i32 = arith.constant 32 : i32 loc(#loc1)
    %c64_i32 = arith.constant 64 : i32 loc(#loc1)
    %c128_i32 = arith.constant 128 : i32 loc(#loc1)
    %c8_i32 = arith.constant 8 : i32 loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.addi %arg3, %c127_i32 : i32 loc(#loc58)
    %2 = arith.divsi %1, %c128_i32 : i32 loc(#loc59)
    %3 = arith.addi %arg4, %c63_i32 : i32 loc(#loc60)
    %4 = arith.divsi %3, %c64_i32 : i32 loc(#loc61)
    %5 = arith.muli %4, %c8_i32 : i32 loc(#loc7)
    %6 = arith.divsi %0, %5 : i32 loc(#loc8)
    %7 = arith.muli %6, %c8_i32 : i32 loc(#loc9)
    %8 = arith.subi %2, %7 : i32 loc(#loc10)
    %9 = arith.minsi %8, %c8_i32 : i32 loc(#loc11)
    %10 = arith.remsi %0, %5 : i32 loc(#loc12)
    %11 = arith.remsi %10, %9 : i32 loc(#loc13)
    %12 = arith.addi %7, %11 : i32 loc(#loc14)
    %13 = arith.divsi %10, %9 : i32 loc(#loc15)
    %14 = arith.muli %12, %c128_i32 : i32 loc(#loc16)
    %15 = tt.make_range {end = 128 : i32, start = 0 : i32} : tensor<128xi32> loc(#loc17)
    %16 = tt.splat %14 : i32 -> tensor<128xi32> loc(#loc18)
    %17 = arith.addi %16, %15 : tensor<128xi32> loc(#loc18)
    %18 = tt.splat %arg3 : i32 -> tensor<128xi32> loc(#loc19)
    %19 = arith.remsi %17, %18 : tensor<128xi32> loc(#loc19)
    %20 = arith.muli %13, %c64_i32 : i32 loc(#loc20)
    %21 = tt.make_range {end = 64 : i32, start = 0 : i32} : tensor<64xi32> loc(#loc21)
    %22 = tt.splat %20 : i32 -> tensor<64xi32> loc(#loc22)
    %23 = arith.addi %22, %21 : tensor<64xi32> loc(#loc22)
    %24 = tt.splat %arg4 : i32 -> tensor<64xi32> loc(#loc23)
    %25 = arith.remsi %23, %24 : tensor<64xi32> loc(#loc23)
    %26 = tt.make_range {end = 32 : i32, start = 0 : i32} : tensor<32xi32> loc(#loc24)
    %27 = tt.expand_dims %19 {axis = 1 : i32} : tensor<128xi32> -> tensor<128x1xi32> loc(#loc25)
    %28 = tt.splat %arg6 : i32 -> tensor<128x1xi32> loc(#loc26)
    %29 = arith.muli %27, %28 : tensor<128x1xi32> loc(#loc26)
    %30 = tt.expand_dims %26 {axis = 0 : i32} : tensor<32xi32> -> tensor<1x32xi32> loc(#loc27)
    %31 = tt.broadcast %29 : tensor<128x1xi32> -> tensor<128x32xi32> loc(#loc28)
    %32 = tt.broadcast %30 : tensor<1x32xi32> -> tensor<128x32xi32> loc(#loc28)
    %33 = arith.addi %31, %32 : tensor<128x32xi32> loc(#loc28)
    %34 = tt.splat %arg0 : !tt.ptr<f32> -> tensor<128x32x!tt.ptr<f32>> loc(#loc29)
    %35 = tt.addptr %34, %33 : tensor<128x32x!tt.ptr<f32>>, tensor<128x32xi32> loc(#loc29)
    %36 = tt.expand_dims %26 {axis = 1 : i32} : tensor<32xi32> -> tensor<32x1xi32> loc(#loc30)
    %37 = tt.splat %arg7 : i32 -> tensor<32x1xi32> loc(#loc31)
    %38 = arith.muli %36, %37 : tensor<32x1xi32> loc(#loc31)
    %39 = tt.expand_dims %25 {axis = 0 : i32} : tensor<64xi32> -> tensor<1x64xi32> loc(#loc32)
    %40 = tt.broadcast %38 : tensor<32x1xi32> -> tensor<32x64xi32> loc(#loc33)
    %41 = tt.broadcast %39 : tensor<1x64xi32> -> tensor<32x64xi32> loc(#loc33)
    %42 = arith.addi %40, %41 : tensor<32x64xi32> loc(#loc33)
    %43 = tt.splat %arg1 : !tt.ptr<f32> -> tensor<32x64x!tt.ptr<f32>> loc(#loc34)
    %44 = tt.addptr %43, %42 : tensor<32x64x!tt.ptr<f32>>, tensor<32x64xi32> loc(#loc34)
    %45 = arith.addi %arg5, %c31_i32 : i32 loc(#loc62)
    %46 = arith.divsi %45, %c32_i32 : i32 loc(#loc63)
    %47 = arith.muli %arg7, %c32_i32 : i32 loc(#loc36)
    %48 = tt.splat %47 : i32 -> tensor<32x64xi32> loc(#loc37)
    %49:3 = scf.for %arg9 = %c0_i32 to %46 step %c1_i32 iter_args(%arg10 = %cst, %arg11 = %35, %arg12 = %44) -> (tensor<128x64xf32>, tensor<128x32x!tt.ptr<f32>>, tensor<32x64x!tt.ptr<f32>>)  : i32 {
      %66 = arith.muli %arg9, %c32_i32 : i32 loc(#loc39)
      %67 = arith.subi %arg5, %66 : i32 loc(#loc40)
      %68 = tt.splat %67 : i32 -> tensor<1x32xi32> loc(#loc41)
      %69 = arith.cmpi slt, %30, %68 : tensor<1x32xi32> loc(#loc41)
      %70 = tt.broadcast %69 : tensor<1x32xi1> -> tensor<128x32xi1> loc(#loc42)
      %71 = tt.load %arg11, %70, %cst_2 : tensor<128x32x!tt.ptr<f32>> loc(#loc42)
      %72 = tt.splat %67 : i32 -> tensor<32x1xi32> loc(#loc43)
      %73 = arith.cmpi slt, %36, %72 : tensor<32x1xi32> loc(#loc43)
      %74 = tt.broadcast %73 : tensor<32x1xi1> -> tensor<32x64xi1> loc(#loc44)
      %75 = tt.load %arg12, %74, %cst_1 : tensor<32x64x!tt.ptr<f32>> loc(#loc44)
      %76 = tt.dot %71, %75, %arg10, inputPrecision = tf32 : tensor<128x32xf32> * tensor<32x64xf32> -> tensor<128x64xf32> loc(#loc45)
      %77 = tt.addptr %arg11, %cst_0 : tensor<128x32x!tt.ptr<f32>>, tensor<128x32xi32> loc(#loc46)
      %78 = tt.addptr %arg12, %48 : tensor<32x64x!tt.ptr<f32>>, tensor<32x64xi32> loc(#loc37)
      scf.yield %76, %77, %78 : tensor<128x64xf32>, tensor<128x32x!tt.ptr<f32>>, tensor<32x64x!tt.ptr<f32>> loc(#loc47)
    } loc(#loc38)
    %50 = tt.expand_dims %17 {axis = 1 : i32} : tensor<128xi32> -> tensor<128x1xi32> loc(#loc48)
    %51 = tt.splat %arg8 : i32 -> tensor<128x1xi32> loc(#loc49)
    %52 = arith.muli %51, %50 : tensor<128x1xi32> loc(#loc49)
    %53 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<128x1x!tt.ptr<f32>> loc(#loc50)
    %54 = tt.addptr %53, %52 : tensor<128x1x!tt.ptr<f32>>, tensor<128x1xi32> loc(#loc50)
    %55 = tt.expand_dims %23 {axis = 0 : i32} : tensor<64xi32> -> tensor<1x64xi32> loc(#loc51)
    %56 = tt.broadcast %54 : tensor<128x1x!tt.ptr<f32>> -> tensor<128x64x!tt.ptr<f32>> loc(#loc52)
    %57 = tt.broadcast %55 : tensor<1x64xi32> -> tensor<128x64xi32> loc(#loc52)
    %58 = tt.addptr %56, %57 : tensor<128x64x!tt.ptr<f32>>, tensor<128x64xi32> loc(#loc52)
    %59 = tt.splat %arg3 : i32 -> tensor<128x1xi32> loc(#loc53)
    %60 = arith.cmpi slt, %50, %59 : tensor<128x1xi32> loc(#loc53)
    %61 = tt.splat %arg4 : i32 -> tensor<1x64xi32> loc(#loc54)
    %62 = arith.cmpi slt, %55, %61 : tensor<1x64xi32> loc(#loc54)
    %63 = tt.broadcast %60 : tensor<128x1xi1> -> tensor<128x64xi1> loc(#loc55)
    %64 = tt.broadcast %62 : tensor<1x64xi1> -> tensor<128x64xi1> loc(#loc55)
    %65 = arith.andi %63, %64 : tensor<128x64xi1> loc(#loc55)
    tt.store %58, %49#0, %65 : tensor<128x64x!tt.ptr<f32>> loc(#loc56)
    tt.return loc(#loc57)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("/home/chan/triton/python/tutorials/03-matrix-multiplication.py":263:24)
#loc3 = loc("/home/chan/triton/python/triton/language/standard.py":40:22)
#loc4 = loc("/home/chan/triton/python/tutorials/03-matrix-multiplication.py":264:27)
#loc5 = loc("/home/chan/triton/python/triton/language/standard.py":40:28)
#loc6 = loc("/home/chan/triton/python/tutorials/03-matrix-multiplication.py":265:27)
#loc7 = loc("/home/chan/triton/python/tutorials/03-matrix-multiplication.py":266:38)
#loc8 = loc("/home/chan/triton/python/tutorials/03-matrix-multiplication.py":267:22)
#loc9 = loc("/home/chan/triton/python/tutorials/03-matrix-multiplication.py":268:29)
#loc10 = loc("/home/chan/triton/python/tutorials/03-matrix-multiplication.py":269:35)
#loc11 = loc("/home/chan/triton/python/tutorials/03-matrix-multiplication.py":269:48)
#loc12 = loc("/home/chan/triton/python/tutorials/03-matrix-multiplication.py":270:34)
#loc13 = loc("/home/chan/triton/python/tutorials/03-matrix-multiplication.py":270:54)
#loc14 = loc("/home/chan/triton/python/tutorials/03-matrix-multiplication.py":270:27)
#loc15 = loc("/home/chan/triton/python/tutorials/03-matrix-multiplication.py":271:40)
#loc16 = loc("/home/chan/triton/python/tutorials/03-matrix-multiplication.py":273:23)
#loc17 = loc("/home/chan/triton/python/tutorials/03-matrix-multiplication.py":273:51)
#loc18 = loc("/home/chan/triton/python/tutorials/03-matrix-multiplication.py":273:38)
#loc19 = loc("/home/chan/triton/python/tutorials/03-matrix-multiplication.py":273:68)
#loc20 = loc("/home/chan/triton/python/tutorials/03-matrix-multiplication.py":274:23)
#loc21 = loc("/home/chan/triton/python/tutorials/03-matrix-multiplication.py":274:51)
#loc22 = loc("/home/chan/triton/python/tutorials/03-matrix-multiplication.py":274:38)
#loc23 = loc("/home/chan/triton/python/tutorials/03-matrix-multiplication.py":274:68)
#loc24 = loc("/home/chan/triton/python/tutorials/03-matrix-multiplication.py":275:26)
#loc25 = loc("/home/chan/triton/python/tutorials/03-matrix-multiplication.py":276:30)
#loc26 = loc("/home/chan/triton/python/tutorials/03-matrix-multiplication.py":276:41)
#loc27 = loc("/home/chan/triton/python/tutorials/03-matrix-multiplication.py":276:60)
#loc28 = loc("/home/chan/triton/python/tutorials/03-matrix-multiplication.py":276:53)
#loc29 = loc("/home/chan/triton/python/tutorials/03-matrix-multiplication.py":276:22)
#loc30 = loc("/home/chan/triton/python/tutorials/03-matrix-multiplication.py":277:29)
#loc31 = loc("/home/chan/triton/python/tutorials/03-matrix-multiplication.py":277:40)
#loc32 = loc("/home/chan/triton/python/tutorials/03-matrix-multiplication.py":277:60)
#loc33 = loc("/home/chan/triton/python/tutorials/03-matrix-multiplication.py":277:52)
#loc34 = loc("/home/chan/triton/python/tutorials/03-matrix-multiplication.py":277:22)
#loc35 = loc("/home/chan/triton/python/tutorials/03-matrix-multiplication.py":279:33)
#loc36 = loc("/home/chan/triton/python/tutorials/03-matrix-multiplication.py":288:33)
#loc37 = loc("/home/chan/triton/python/tutorials/03-matrix-multiplication.py":288:18)
#loc38 = loc("/home/chan/triton/python/tutorials/03-matrix-multiplication.py":279:22)
#loc39 = loc("/home/chan/triton/python/tutorials/03-matrix-multiplication.py":282:59)
#loc40 = loc("/home/chan/triton/python/tutorials/03-matrix-multiplication.py":282:55)
#loc41 = loc("/home/chan/triton/python/tutorials/03-matrix-multiplication.py":282:51)
#loc42 = loc("/home/chan/triton/python/tutorials/03-matrix-multiplication.py":282:20)
#loc43 = loc("/home/chan/triton/python/tutorials/03-matrix-multiplication.py":283:51)
#loc44 = loc("/home/chan/triton/python/tutorials/03-matrix-multiplication.py":283:20)
#loc45 = loc("/home/chan/triton/python/tutorials/03-matrix-multiplication.py":285:35)
#loc46 = loc("/home/chan/triton/python/tutorials/03-matrix-multiplication.py":287:18)
#loc47 = loc("/home/chan/triton/python/tutorials/03-matrix-multiplication.py":288:8)
#loc48 = loc("/home/chan/triton/python/tutorials/03-matrix-multiplication.py":296:41)
#loc49 = loc("/home/chan/triton/python/tutorials/03-matrix-multiplication.py":296:33)
#loc50 = loc("/home/chan/triton/python/tutorials/03-matrix-multiplication.py":296:21)
#loc51 = loc("/home/chan/triton/python/tutorials/03-matrix-multiplication.py":296:72)
#loc52 = loc("/home/chan/triton/python/tutorials/03-matrix-multiplication.py":296:52)
#loc53 = loc("/home/chan/triton/python/tutorials/03-matrix-multiplication.py":297:33)
#loc54 = loc("/home/chan/triton/python/tutorials/03-matrix-multiplication.py":297:58)
#loc55 = loc("/home/chan/triton/python/tutorials/03-matrix-multiplication.py":297:39)
#loc56 = loc("/home/chan/triton/python/tutorials/03-matrix-multiplication.py":298:21)
#loc57 = loc("/home/chan/triton/python/tutorials/03-matrix-multiplication.py":298:4)
#loc58 = loc(callsite(#loc3 at #loc4))
#loc59 = loc(callsite(#loc5 at #loc4))
#loc60 = loc(callsite(#loc3 at #loc6))
#loc61 = loc(callsite(#loc5 at #loc6))
#loc62 = loc(callsite(#loc3 at #loc35))
#loc63 = loc(callsite(#loc5 at #loc35))
